===========================================
How to Write a JDBC code : Using statement
===========================================
Step1: Create a java project in eclipse.

Step2: Add the External MySQL jar
Right click on Project->Build Path->Configure Build Path->Click on Libraries -> Add External Jar->Select Jar File-> Click on Apply and Close or Apply button.

Step3: Create a table in mysql workbench

CREATE TABLE user (
id int NOT NULL AUTO_INCREMENT,
lastName varchar(255) ,
firstName varchar(255) ,
address varchar(255),
city varchar(255) ,
salary varchar(255) , 
PRIMARY KEY (`id`)
);

Step4: Write a program to insert the data into user table.
- First create try-catch block.
- Create the SQL Insert query in String format.
String sql = "insert into user (lastName,firstName,address,city,salary)"
+ "values('pawar','ram','sangavi','pune',5000)";
- Class.forName("com.mysql.cj.jdbc.Driver");
- Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/user", "root", "root");
- Statement statement = con.createStatement();
- statement.execute(sql);
- System.out.println("Insertion successfully...");
- con.close();
- statement.close();

====================================================
How to Write a JDBC code : Using prepared statement
====================================================
CREATE TABLE employee (
id int NOT NULL AUTO_INCREMENT,
username varchar(255) ,
password varchar(255), 
PRIMARY KEY (`id`)
);

Step4: Write a program to insert the data into employee table.
- First create try-catch block.
- Class.forName("com.mysql.cj.jdbc.Driver");
- Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/user", "root", "root");
- PreparedStatement stmt = con.prepareStatement("insert into employee(username,password)values(?,?)");
- stmt.setString(1, "admin"); 
- stmt.setString(2, "guest");
- int i=stmt.executeUpdate();
- System.out.println("Insertion successfully...");
- con.close();
- statement.close();


===================================================
Different ways of creating object
1. new keyword.
2. clone
3. searialization
4. new instance
5. class.forname